plugins {
	id 'com.diffplug.eclipse.mavencentral'
	id 'eclipse'
}

eclipse.project.natures 'org.eclipse.pde.PluginNature'

eclipseMavenCentral {
	release eclipseVersion, {
		api 'org.eclipse.pde.core'
		[
				'org.eclipse.core.commands',
				'org.eclipse.core.jobs',
				'org.eclipse.core.resources',
				'org.eclipse.core.runtime',
				'org.eclipse.equinox.common',
				'org.eclipse.jdt.core',
				'org.eclipse.jface',
				'org.eclipse.osgi',
				'org.eclipse.swt',
				'org.eclipse.ui.workbench',
		].each it.&implementation
		useNativesForRunningPlatform()
	}
}

dependencies {
	implementation(
			project(':com.ibm.wala.core'),
			project(':com.ibm.wala.util'),
	)
}

final copyEclipsePluginDependencies = tasks.register('copyEclipsePluginDependencies', Sync) {
	[
		'cast',
		'core',
		'util',
		'shrike',
	].each {
		from project(":com.ibm.wala.$it").tasks.named('jar')
	}
	into project.layout.buildDirectory.dir('eclipse-plugin-dependencies')
	rename "(.*)-${java.util.regex.Pattern.quote(version)}(.*)", '$1$2'
}

eclipse {
	synchronizationTasks copyEclipsePluginDependencies
}

tasks.register('prepareMavenBuild') {
	dependsOn copyEclipsePluginDependencies
}
